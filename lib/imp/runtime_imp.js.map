{"version":3,"sources":["../../src/imp/runtime_imp.js"],"names":[],"mappings":";;;;;;qjBAAgE;AAClC;;;AAD9B;;AACA;;;;AACA;;IAAY,M;;;;;;;;AACZ,IAAI,QAAQ,QAAQ,mCAAR,CAAZ;AACA,IAAI,YAAY,QAAQ,SAAR,CAAhB;AACA,IAAM,gBAAgB,QAAQ,oBAAR,CAAtB;;IAEqB,U;AACjB,aADiB,UACjB,CAAY,WAAZ,EAAyB,WAAzB,EAAsC,aAAtC,EAAqD,UAArD,EAAiE;AAAA,8BADhD,UACgD;;AAC7D,aAAK,YAAL,GAAoB,WAApB;AACA,aAAK,YAAL,GAAoB,WAApB;AACA,aAAK,cAAL,GAAsB,aAAtB;AACA,aAAK,WAAL,GAAmB,UAAnB;AACH;;iBANgB,U;;mCAQN;AACP,gBAAI,cAAc,EAAlB;AACA,gCAAM,KAAK,WAAX,EAAwB,UAAC,GAAD,EAAM,GAAN,EAAc;AAClC,4BAAY,IAAZ,CAAiB,IAAI,2CAAe,QAAnB,CAA4B;AACzC,yBAAQ,OAAO,QAAP,CAAgB,GAAhB,CADiC;AAEzC,2BAAQ,OAAO,QAAP,CAAgB,GAAhB;AAFiC,iBAA5B,CAAjB;AAIH,aALD;;AAOA;AACA;AACA,mBAAO,IAAI,2CAAe,OAAnB,CAA2B;AAC9B,sBAAe,KAAK,YADU;AAE9B,8BAAe,KAAK,YAFU;AAG9B,4BAAe,KAAK,cAHU;AAI9B,uBAAe;AAJe,aAA3B,CAAP;AAMH;;;kCAES;AACN,gBAAI,gBAAgB,IAAI,MAAM,QAAV,EAApB;AACA,0BAAc,MAAd,CAAqB,0BAArB;AACA,0BAAc,cAAd,CAA6B,cAAc,OAA3C;;AAEA,gBAAI,iBAAiB,IAAI,MAAM,QAAV,EAArB;AACA,2BAAe,MAAf,CAAsB,2BAAtB;AACA,2BAAe,cAAf,CAA8B,SAA9B;;AAEA,gBAAI,gBAAgB,IAAI,MAAM,QAAV,EAApB;AACA,0BAAc,MAAd,CAAqB,0BAArB;AACA,0BAAc,cAAd,CAA6B,KAAK,cAAlC;;AAEA,gBAAI,aAAa,UAAU,QAAV,CAAmB,KAAK,YAAxB,CAAjB;;AAEA,gBAAI,gBAAgB,IAAI,MAAM,QAAV,EAApB;AACA,0BAAc,aAAd,CAA4B,UAA5B;AACA,0BAAc,WAAd,CAA0B,CAAC,aAAD,EAAgB,cAAhB,EAAgC,aAAhC,CAA1B;AACA,mBAAO,aAAP;AACH;;;WA9CgB,U;;;kBAAA,U","file":"runtime_imp.js","sourcesContent":["import { crouton_thrift } from '../platform_abstraction_layer'; // eslint-disable-line camelcase\nimport _each from '../_each'; // eslint-disable-line camelcase\nimport * as coerce from './coerce.js';\nlet proto = require('./generated_proto/collector_pb.js');\nlet converter = require('hex2dec');\nconst packageObject = require('../../package.json');\n\nexport default class RuntimeImp {\n    constructor(runtimeGUID, startMicros, componentName, attributes) {\n        this._runtimeGUID = runtimeGUID;\n        this._startMicros = startMicros;\n        this._componentName = componentName;\n        this._attributes = attributes;\n    }\n\n    toThrift() {\n        let thriftAttrs = [];\n        _each(this._attributes, (val, key) => {\n            thriftAttrs.push(new crouton_thrift.KeyValue({\n                Key   : coerce.toString(key),\n                Value : coerce.toString(val),\n            }));\n        });\n\n        // NOTE: for legacy reasons, the Thrift field is called \"group_name\"\n        // but is semantically equivalent to the \"component_name\"\n        return new crouton_thrift.Runtime({\n            guid         : this._runtimeGUID,\n            start_micros : this._startMicros,\n            group_name   : this._componentName,\n            attrs        : thriftAttrs,\n        });\n    }\n\n    toProto() {\n        let tracerVersion = new proto.KeyValue();\n        tracerVersion.setKey('lightstep.tracer_version');\n        tracerVersion.setStringValue(packageObject.version);\n\n        let tracerPlatform = new proto.KeyValue();\n        tracerPlatform.setKey('lightstep.tracer_platform');\n        tracerPlatform.setStringValue('browser');\n\n        let componentName = new proto.KeyValue();\n        componentName.setKey('lightstep.component_name');\n        componentName.setStringValue(this._componentName);\n\n        let reporterId = converter.hexToDec(this._runtimeGUID);\n\n        let reporterProto = new proto.Reporter();\n        reporterProto.setReporterId(reporterId);\n        reporterProto.setTagsList([tracerVersion, tracerPlatform, componentName]);\n        return reporterProto;\n    }\n}\n"]}